@model Pagination<IList<UsersList>>

@{
    ViewData["Title"] = "Users List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<header>
    <nav class="navbar navbar-dark bg-success border-bottom box-shadow mb-3 fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand justify-content-center" asp-controller="GetAllUsers" asp-action="User">Users</a>
            <ul class="navbar-nav justify-content-end" style="flex-direction:row;">
                <li class="nav-item" style="margin-right:5px;">
                    <a class="nav-link text-white" asp-controller="Login" asp-action="Mobile"><i class="fa fa-bars fa-1x" aria-hidden="true"></i></a>
                </li>
            </ul>
        </div>
    </nav>
</header>
<div class="mform" style="padding-left:5px;padding-right:5px;">
    @if (Model != null)
{
    <p>
        <auth-link action="Create" controller="User" content='<i class="fa fa-plus fa-1x"></i>&nbsp;Create New' bclass="btn btn-sm btn-success" feature=@MenuEnum.Add_User></auth-link>
    </p>

    <form class="wofilter" id="form1">
        <div class="input-group">
            <div class="cont">
                <input type="radio" @if (ViewBag.filter == FilterEnum.Email) { <text> checked</text>} id="email" name="Filter" value='@FilterEnum.Email' class="selector1" required>
                <label class="label1" for="email">User</label>
            </div>
            <div class="cont">
                <input type="radio" @if (ViewBag.filter == FilterEnum.FirstName) { <text> checked</text>} id="firstname" name="Filter" value=@FilterEnum.FirstName class="selector2" required>
                <label class="label2" for="firstname">@FilterEnum.FirstName</label>
            </div>
            <div class="cont" style="margin-right:30px;">
                <input type="radio" @if (ViewBag.filter == FilterEnum.Property) { <text> checked</text>} id="property" name="Filter" value=@FilterEnum.Property class="selector3" required>
                <label class="label3" for="property">Primary Property</label>
            </div>
            <input style="margin-right:10px;" class="form-control form-control-sm" value='@ViewBag.searchString' name="matchString" autocomplete="off" id="search" type="text" placeholder="Search">
            <input style="margin-right:10px;" class="btn btn-sm btn-primary" type="submit" value="Filter">
           <input style="margin-right:10px;" type="reset" value="Reset" id="dohiddenreset" class="btn btn-sm btn-danger">
        </div>
        <hr />
        <div class="workordertitle">
            Users List
        </div>
        @if (Model != null && Model.Payload != null && Model.Payload.Any())
        {
        <table class="table table-striped  table_container usersview table-responsive-lg ">
            <thead>
                <tr>
                    <th>
                        #
                    </th>
                    <th>
                        Full Name
                    </th>
                    <th>
                        UserId (E-mail)
                    </th>
                    <th>
                        Roles
                    </th>
                    <th>
                        Primary Property
                    </th>
                    
                    <th>Operation</th>
                </tr>
            </thead>
            <tbody>
                @{int i = 1;}
                @foreach (var item in Model.Payload)
                    {
                <tr>
                    <td>
                        @i @{ i++;}
                    </td>
                    <td>
                        <span class="value"> @Html.DisplayFor(modelItem => item.FullName)</span>
                    </td>
                    <td>
                        <span class="value">@Html.DisplayFor(modelItem => item.Email)</span>
                    </td>
                    <td>
                        <span class="value">@Html.DisplayFor(modelItem => item.Roles)</span>
                    </td>
                    <td>
                        <span class="value">@Html.DisplayFor(modelItem => item.PrimaryProperty)</span>
                    </td>
                    
                    <td>
                        @{
                            Dictionary<string, string> keyValuePairs = new Dictionary<string, string>();
                            keyValuePairs.Add("id", item.Id + "");
                        }
                        @if (HttpContextAccessor.HttpContext.User.IsInRole("Admin"))
                        {

                        }
                        else
                        {
                            <auth-link bclass="btn btn-sm btn-success" feature=@MenuEnum.Edit_User routedata=@keyValuePairs action="EditUserView" controller="User" content='<i class="fa fa-pencil-alt"></i>&nbsp;Edit'></auth-link>
                        }
                        <auth-link bclass="btn btn-sm btn-info" feature=@MenuEnum.View_User_Detail routedata=@keyValuePairs action="UserDetailView" controller="User" content='<i class="fa fa-info"></i>&nbsp;Detail'></auth-link>
                        @{keyValuePairs.Add("page", Model.CurrentPage + "");}
                        @if (item.IsActive)
                        {
                            keyValuePairs.Add("operation", "0");
                            <auth-link bclass="btn btn-sm btn-danger" feature=@MenuEnum.ActDct_User routedata=@keyValuePairs action="DeAct_ActUser" controller="User" content='Deactivate'></auth-link>
                        }
                        else
                        {
                            keyValuePairs.Add("operation", "1");
                            <auth-link bclass="btn btn-sm btn-info" feature=@MenuEnum.ActDct_User routedata=@keyValuePairs action="DeAct_ActUser" controller="User" content='Activate'></auth-link> @*@Html.ActionLink("Activate", "DeAct_ActUser", new { userId = item.Id, operation = 1, page = Model.CurrentPage }, new { @class = "btn btn-sm btn-outline-success" })*@
                        }
                    </td>
                </tr>

                    }
            </tbody>
        </table>
        }
        else
        {
        <span>Not Found</span>
        }
        <hr />
        <nav>
            <ul class="pagination">
                @{ int current = 0;}
                <li class="page-item @if (Model.CurrentPage == 0)
                {<text>disabled</text> }">
                    @Html.ActionLink("Prev", "GetAllUsers", "User", "", "", "", new { requestedPage = current - 1, matchString = ViewBag.searchstring }, new { @class = "page-link" })
                </li>

                @for (int i = 0; i < Model.PageCount; i++)
                {

                    if (Model.CurrentPage == i)
                    {
                <li class="page-item active" >
                    <a class="page-link" >@(i + 1) <span class="sr-only">(current)</span></a>
                </li>
                        current = i;
                    }
                    else
                    {
                <li class="page-item">
                    @Html.ActionLink(i + 1 + "", "GetAllUsers", "User", "", "", "", new { requestedPage = i, matchString = ViewBag.searchstring }, new { @class = "page-link" })
                </li>
                    }
                }
                <li class="page-item @if (Model.CurrentPage + 1 == Model.PageCount)
                {<text>disabled</text> }">
                    @Html.ActionLink("Next", "GetAllUsers", "User", "", "", "", new { requestedPage = current + 1, matchString = ViewBag.searchstring }, new { @class = "page-link" })
                </li>
            </ul>
        </nav>
    </form>
}
    @if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
{
    var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

    <script>
        alertify.alert('@key', '<p>@TempData[key]</p>', function () { });
       
    </script>
}
</div>
