@{
    ViewData["Title"] = "Work Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model WOFilterModel
@{ var ResponseModel = ViewBag.Response as Pagination<List<WorkOrderAssigned>>;
    var bottom = "0";
    var height = "88%";
    var context = HttpContextAccessor.HttpContext.Request.Headers["User-Agent"].ToString();
    if (context.Contains("iPhone"))
    {
        height = "85%";
        bottom = "0%";
    }
}
@{ var param = Model.GetType()
            .GetProperties()
            .ToDictionary(prop => prop.Name, prop => prop.GetValue(Model) != null ? prop.GetValue(Model).ToString() : "");
}

<header>
    <nav class="navbar navbar-dark bg-success border-bottom box-shadow mb-3 fixed-top">
        <div class="container-fluid">
            <ul class="navbar-nav justify-content-start" style="flex-direction:row;">
                <li class="nav-item" style="margin-right:5px;">
                    <div class="Filter_con float-right">
                        <input asp-for="FilterActive" class="filter_check" title="Filter" style="color:white;padding:5px;">
                        <i class="fa fa-filter fa-1x" title="Filter" style="color:white"></i>
                    </div>
                </li>
            </ul>
            <a class="navbar-brand justify-content-center" asp-controller="WorkOrder" asp-action="Index">To Do</a>
            <ul class="navbar-nav justify-content-end" style="flex-direction:row;">
                <li class="nav-item" style="margin-right:5px;">
                    <a class="nav-link text-white" asp-controller="Login" asp-action="Mobile"><i class="fa fa-bars fa-1x" aria-hidden="true"></i></a>
                </li>
            </ul>
        </div>
    </nav>
</header>

<form class="mform" style="height:@height">

    <partial name="~/Views/WorkOrder/Mobile/_filter.cshtml" model="Model" />
    <div class="d-inline custom-control" style="width:100%;bottom: 16px;">
        <div style="text-align: center;">
            <input type="checkbox" asp-for="SortedByDate" onchange="SubmitFn();" data-toggle="toggle" data-size="xs" data-off="Sorted by Highest Priority" data-on="Sorted by New" data-onstyle="warning" data-offstyle="info" id="sortbydate">
        </div>
    </div>
    <div class="container">
        @if (ResponseModel != null && ResponseModel.Payload != null && ResponseModel.Payload.Any())
        {
            <table class="table border-0" style="table-layout:fixed;">
                <tbody>
                    @foreach (var item in ResponseModel.Payload)
                    {
                        <tr class='clickable w-100' onclick="window.location='@Url.Action("GetWODetail",new {id=item.Id})'">
                            <td style="padding-top:20px;padding-bottom:20px;">
                                <span style="word-wrap:break-word;font-size:15px"><span class="d-inline-flex status @if(item.ParentId!=null){<text>green</text>}else{ <text>orange</text>}"></span>@item.Description</span>
                            </td>
                            <td style="padding-right:0px;text-align:end;font-size:14px;color:grey;padding-top:20px;padding-bottom:20px;">@item.DueDate.Substring(0, 6)&nbsp;<span class="glyphicon glyphicon-chevron-right"></span></td>
                        </tr>
                    }
                </tbody>
            </table>
            <hr />
            <nav>
                <ul class="pagination">
                    @{ int current = 0;}
                    <li class="page-item @if (ResponseModel.CurrentPage == 0) {<text>disabled</text> }">
                        @Html.ActionLink("Prev", "Index", "WorkOrder", "", "", "", new { requestedPage = current - 1, matchString = ViewBag.searchstring, status = ViewBag.status, enddate = ViewBag.enddate }, new { @class = "page-link" })
                    </li>

                    @for (int i = 0; i < ResponseModel.PageCount; i++)
                    {

                        if (ResponseModel.CurrentPage == i)
                        {
                            <li class="page-item active">
                                <a class="page-link ">@(i + 1) <span class="sr-only">(current)</span></a>
                            </li>
                            current = i;
                        }
                        else
                        {
                            <li class="page-item ">
                                @{ Model.PageNumber = i;}
                                @Html.ActionLink(i + 1 + "", "Index", "WorkOrder", "", "", "", Model, new { @class = "page-link" })
                            </li>
                        }
                    }
                    @{ Model.PageNumber = current + 1;}
                    <li class="page-item @if (ResponseModel.CurrentPage + 1 == ResponseModel.PageCount) {<text>disabled</text> }">
                        @Html.ActionLink("Next", "Index", "WorkOrder", "", "", "", Model, new { @class = "page-link" })
                    </li>
                </ul>
            </nav>

        }
        else
        {
            <span>No records found</span>

        }
    </div>
</form>
<hr />
<div class="bottom-section" style="bottom:@bottom">
    <div class="bottom-stick">
        <a onClick="location.href=location.href" class="nav-link" style="color:#fdfdfdf2;padding-left: 24px"><i class="fa fa-retweet fa-3x" aria-hidden="true"></i></a>
        <div class="container-block">
            <a asp-action="CreateWorkOrderView" class="nav-link float-right" style="color:#fdfdfdf2"><i class="fa fa-plus fa-3x"></i></a>
        </div>
    </div>
    </div>
    @if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
    {
        var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

        <script>
    alertify.alert('@key', '<p>@TempData[key]</p>', function () { });

        </script>
    }

    <script>
        function SubmitFn() {
            console.log("hello");
            $('#filter').click();
        }
    </script>
    <style>
        .toggle.btn.btn-xs.btn-info.off {
            width: 220.125px !important;
            height: 20.8056px !important;
        }

        .toggle.btn.btn-xs.btn-warning {
            width: 220.125px !important;
            height: 20.8056px !important;
        }
    </style>
