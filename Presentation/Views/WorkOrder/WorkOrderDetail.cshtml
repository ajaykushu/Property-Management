@model Presentation.ViewModels.WorkOrderDetail
@{
    ViewData["Title"] = "WO Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var url = HttpContextAccessor.HttpContext.Request.Headers["Referer"].ToString();
    var redirector = string.Empty;
    if (Model.Recurring)
        redirector = "/WorkOrder/GetRecurringWO";
    else
        redirector = "/WorkOrder";
    if (url != null && HttpContextAccessor.HttpContext.Request.Path.HasValue)
    {

        Regex rx = new Regex(@"(http[s]?:\/\/)?([^\/\s]+\/)(.*)",
        RegexOptions.Compiled);
        MatchCollection mc = rx.Matches(url);
        foreach (Match m in mc)
        {
            GroupCollection groups = m.Groups;
            Console.WriteLine(
            groups[3]);
            if (url.Contains("GetWODetail") && url.Contains("type"))
            {

                //means the reffer is different
                redirector = "/" + groups[3].Value + "#ChildWOSection";

            }
        }
    }
}
    <div>
        @if (!Model.Recurring && !Model.StatusDescription.Equals("Complete"))
        {
            @Html.ActionLink("Edit", "EditWOView", new { id = Model.Id }) <span>|</span>
        }
        else
        {
            if (!Model.StatusDescription.Equals("Complete"))
            {
            @Html.ActionLink("Edit", "EditRecurringWOView", new { id = Model.Id }) <span>|</span>}

        }
        <a href="@redirector">Back to List</a>
    </div>


    <div class="workordertitle">
        @if (Model != null)
        {
            if (Model.Recurring)
            {
                <span>Recurring Work Order Detail</span>
            }
            else
            {
                <span>Work Order Detail</span>

            }
            <span class="fa-pull-right pr-2">@Model.Id</span>
        }


    </div>
    @if (Model != null)
    {
        <table class="table table-striped">
            <thead>
            </thead>
            <tbody>

                <tr>
                    <td>
                        <div class="d-md-inline-flex myview">
                            <div>
                                <h2>@Model.PropertyName</h2>
                                <img src="~/hotel.svg" width="25" height="35"><strong style="color:grey">@Model.SubLocation in @Model.Location</strong><br />
                                <strong style="color:grey">@Model.Item @Model.Issue</strong><br />
                                <br />
                                <p>Assigned To <strong class="text-success">@Model.AssignedTo</strong></p>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                </tr>
                @if (Model.Recurring)
                {
                    <tr>
                        <th>
                            Schedule Details
                        </th>
                    </tr>
                    <tr>
                        <td>
                            <div class="col">

                                @if (Model.RecurringStartDate.HasValue)
                                {
                                    <div class="row top-buffer">
                                        <div class="col-md-3">
                                            <label asp-for="RecurringStartDate">Schedule Start Date</label>
                                        </div>
                                        <div class="col">
                                            <span class="value">@Html.DisplayFor(x => x.RecurringStartDate.Value)</span>
                                        </div>
                                    </div>
                                }
                                @if (Model.EndAfterCount.HasValue)
                                {
                                    <div class="row top-buffer">
                                        <div class="col-md-3">
                                            <label asp-for="EndAfterCount">End After Count</label>
                                        </div>
                                        <div class="col">
                                            <span class="value">@Html.DisplayFor(x => x.EndAfterCount.Value)</span>
                                        </div>
                                    </div>
                                }
                                <div class="row top-buffer">
                                    <div class="col-md-3">
                                        <label asp-for="CronExpression">Schedule</label>
                                    </div>
                                    <div class="col">
                                        <span class="value" style="color:green"><strong>@Html.DisplayFor(x => x.CronExpression)</strong></span>
                                    </div>
                                </div>
                                @if (Model.RecurringEndDate.HasValue)
                                {
                                    <div class="row ">
                                        <div class="col-md-3">
                                            <label asp-for="RecurringEndDate">Schedule End Date</label>
                                        </div>
                                        <div class="col">
                                            <span class="value"> @Html.DisplayFor(x => x.RecurringEndDate.Value)</span>
                                        </div>
                                    </div>
                                }
                            </div>

                        </td>
                    </tr>
                }
                <tr>
                    <th>
                        Status Details
                    </th>
                </tr>

                <tr>
                    <td>
                        <div class="col">
                            <div class="row ">
                                <div class="col-md-3">
                                    <label asp-for="StatusDescription"></label>
                                </div>
                                <div class="col">
                                    <span class="value">  @Html.DisplayFor(x => x.StatusDescription)</span>
                                </div>
                            </div>
                            <div class="row top-buffer">
                                <div class="col-md-3">
                                    <label asp-for="Priority"></label>
                                </div>
                                <div class="col">
                                    @if (Model.Priority == 0)
                                    {
                                        <span>Critical</span>
                                    }
                                    else if (Model.Priority == 1)
                                    {
                                        <span>High</span>
                                    }
                                    else if (Model.Priority == 2)
                                    {
                                        <span>Medium</span>
                                    }
                                    else if (Model.Priority == 3)
                                    {
                                        <span>Low</span>
                                    }
                                </div>
                            </div>
                            @if (!Model.Recurring)
                            {
                                <div class="row top-buffer">
                                    <div class="col-md-3">
                                        <label>Update Status</label>
                                    </div>
                                    <div class="col">
                                        <form asp-action="WorkOrderStatusChange">
                                            <select class="form-control form-control-sm custom-input" name="StatusId" asp-items="@(new SelectList(Model.Statuses, "Id", "PropertyName"))" required>
                                                <option value="">Select Status</option>
                                            </select>
                                            <div class="form-group">
                                                <label>Add Status Description</label>
                                                <textarea class="form-control custom-input top-buffer" name="Comment"></textarea>
                                            </div>
                                            <input asp-for="Id" hidden>
                                            <input type="submit" value="Update Status" class="btn btn-sm btn-primary">
                                        </form>
                                    </div>
                                </div>
                            }
                        </div>
                    </td>
                </tr>

                <tr>
                    <th>
                        WO Information
                    </th>
                </tr>
                <tr>
                    <td>
                        <div class="col">
                            <div class="row ">
                                <div class="col-md-3">
                                    <label asp-for="Issue"></label>
                                </div>
                                <div class="col">
                                    <span class="value"> @Html.DisplayFor(x => x.Issue)</span>
                                </div>
                            </div>
                            <div class="row top-buffer">
                                <div class="col-md-3">
                                    <label asp-for="Item"></label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.Item)</span>
                                </div>
                            </div>
                            <div class="row top-buffer">
                                <div class="col-md-3">
                                    <label asp-for="Requestedby"></label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.Requestedby)</span>
                                </div>
                            </div>
                            <div class="row top-buffer">
                                <div class="col-md-3">
                                    <label asp-for="CreatedTime"></label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.CreatedTime)</span>
                                </div>
                            </div>
                            <div class="row top-buffer">
                                <div class="col-md-3">
                                    <label for="Comments">Description</label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.Description)</span>
                                </div>
                            </div>
                            <div class="row top-buffer">
                                <div class="col-md-3">
                                    <label asp-for="DueDate"></label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.DueDate)</span>
                                </div>
                            </div>
                            @if (Model.Attachment != null)
                            {
                                <div class="row top-buffer">
                                    <div class="col-md-3">
                                        <label asp-for="Attachment"></label>
                                    </div>
                                    @foreach (var file in Model.Attachment)
                                    {
                                        <div class="col">
                                            <a href="@file.Value" download="random">@file.Key</a>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        Updated Infomation
                    </th>
                </tr>
                <tr>
                    <td>
                        <div class="col">
                            <div class="row ">
                                <div class="col-md-3">
                                    <label for="UpdatedBy">Last Updated By</label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.UpdatedBy)</span>
                                </div>
                            </div>
                            <div class="row top-buffer ">
                                <div class="col-md-3">
                                    <label for="UpdatedTime">Last Update Time</label>
                                </div>
                                <div class="col">
                                    <span class="value">@Html.DisplayFor(x => x.UpdatedTime)</span>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        Vendor
                    </th>
                </tr>
                <tr>
                    <td>
                        <div class="col">
                            <div class="row">
                                <div class="col-md-3">
                                    <label asp-for="Vendor"></label>
                                </div>
                                <div class="col">
                                    <span class="text-info">@Model.Vendor</span>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <a title="history" data-custom-value="@Model.Id" id="history_button"><i class="fa fa-history fa-2x"></i> <i class="fa fa-chevron-down fa-2x" aria-hidden="true"></i></a>
                    </td>
                </tr>

                <tr>
                    <td>
                        <div id="history">
                        </div>
                    </td>
                </tr>

                <tr>
                    <th>
                        Comments
                    </th>
                </tr>

                <tr id="CommentSection">
                    <td>
                        @await Html.PartialAsync("CommentOperation",
    Model.Comments,
    new ViewDataDictionary(ViewData)
    {
                        { "workOrderId", Model.Id }
    })
                    </td>
                </tr>
                @if (Model.Recurring)
                {
                    <tr>
                        <th>
                            Child WO
                        </th>
                    </tr>
                    <tr>
                        <td id="ChildWOSection">
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }






    <style>
        .myview .card {
            width: 200px;
            margin: 5px;
        }

        .imagethumbnail {
            border: 1px solid grey;
            padding: 4px;
            border-radius: 50%;
        }
    </style>

    @if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
    {
        var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

        <script>
                         alertify.alert('@key', '<p>@TempData[key]</p>', function () { });
        </script>
    }

    <script>
     var workorderId = '@Model.Id';
    $(document).ready(function () {

            $.get('@Url.Action("GetChildWO","WorkOrder")' + '?rwoId=' + workorderId + '&search=',
                function (data) {
                    if (data != null || data != undefined) {
                        $('#ChildWOSection').append(data);
                    }
                });


    });

    </script>
