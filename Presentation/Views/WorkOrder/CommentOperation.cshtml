@model Pagination<List<Comment>>

@{
    ViewData["Title"] = "Comments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Comments</h4>
<form asp-action='PostComment' method='post'>
    <p>
        <div class="mycon">
            <button class="btn btn-outline-primary btn-sm" value="0" id="addcomment"><i class="fa fa-comment" aria-hidden="true"></i>&nbsp;Comment</button>
        </div>
    </p>
    @if (Model != null && Model.Payload != null)
    {
        @foreach (var item in Model.Payload)
        {<div class="parent" id=@item.Id>
                <div class="mycon">
                    <div class="card top-buffer comment">
                        <div class="card-body">
                            <p class="text-success">Comment By-&nbsp; @item.CommentBy</p>
                            <h6 class="card-subtitle"> @item.CommentDate</h6>
                            <p class="card-text"> @item.CommentString</p>
                            <button value="@item.CommentBy" class="btn btn-outline-success btn-sm reply"><i class="fa fa-reply" aria-hidden="true"></i>&nbsp;Reply</button>
                        </div>
                    </div>
                </div>

                @if (item.Reply != null)
                {
                    @foreach (var reply in item.Reply)
                    {
                        <div class="mycon">
                            <div class="card top-buffer comment" style="margin-left:24px">
                                <div class="card-body">
                                    <p class="text-info">RepliedBy By-&nbsp; @reply.RepliedBy</p>
                                    <h6 class="card-subtitle">@reply.RepliedDate</h6>
                                    <p class="card-text"><strong>@@@reply.RepliedTo</strong> @reply.ReplyString</p>
                                    <button value="@item.CommentBy" class="btn btn-outline-success btn-sm reply"><i class="fa fa-reply" aria-hidden="true"></i>&nbsp;</button>
                                </div>
                            </div>
                        </div>

                    }
                }
            </div>
        }

        <hr />
        <nav>
            <ul class="pagination">
                @{ int current = 0;}
                <li class="page-item @if (Model.CurrentPage == 0)
                {<text>disabled</text> }">
                    @Html.ActionLink("Prev", "GetComment", "WorkOrder", "", "", "", new { requestedPage = current - 1, workOrderId = ViewBag.workorderId }, new { @class = "page-link" })
                </li>

                @for (int i = 0; i < Model.PageCount; i++)
                {

                    if (Model.CurrentPage == i)
                    {
                        <li class="page-item active">
                            <a class="page-link" asp-action="GetComment">@(i + 1) <span class="sr-only">(current)</span></a>
                        </li>
                        current = i;
                    }
                    else
                    {
                        <li class="page-item">
                            @Html.ActionLink(i + 1 + "", "GetComment", "WorkOrder", "", "", "", new { requestedPage = i, workOrderId = ViewBag.workorderId }, new { @class = "page-link" })
                        </li>
                    }
                }
                <li class="page-item @if (Model.CurrentPage + 1 == Model.PageCount)
                {<text>disabled</text> }">
                    @Html.ActionLink("Next", "GetComment", "WorkOrder", "", "", "", new { requestedPage = current + 1, workOrderId = ViewBag.workorderId }, new { @class = "page-link" })
                </li>
            </ul>
        </nav>
    }
    else
    {
        <p>No Comments</p>
    }
</form>
<div>
    @Html.ActionLink("Back", "GetWODetail", new { id = ViewBag.workorderId })
</div>
<style>
    .note {
        height: 70px;
        width: 100%;
        display: block;
        resize: none;
    }

    .comment:hover {
        box-shadow: 0 10px 20px 0 rgba(0,0,0,0.15);
        transition-property: box-shadow, -webkit-box-shadow;
        transition-duration: 0.4s, 0.4s;
        transition-timing-function: ease, ease;
        transition-delay: 0s, 0s;
    }
</style>
<script>

    $('.reply,#addcomment').click(function (e) {
        console.log($(this).val());
        var con = $(this).closest('div.mycon');
        var parent = $(this).closest('div.parent');
        con.append(

            "<div class='card reply top-buffer' style='margin-left:24px'>" +
            "<div class='card-body'>"+
            "<textarea id='Comment' name='Comment' class='note' required></textarea>" +
            "<input type='text' id='ParentId' name='ParentId' value='" + parent.prop('id') + "'hidden required>" +
            "<input type='text' id='WorkOrderId' name='WorkOrderId' value='" + @ViewBag.workorderId + "'hidden required>" +
            "<input type='text' id='RepliedTo' name='RepliedTo' value='" + $(this).val() + "'hidden required>" +
             "<button  class='btn btn-outline-primary btn-sm top-buffer'>Post</button>"+
             "</div>"+
            "</div>"
            )
    });
</script>
@if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
{
    var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

    <script>
        alertify.alert('@key', '<p>@TempData[key]</p>', function () { });
    </script>
}