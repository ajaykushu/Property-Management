@model WOFilterModel
@{var ResponseModel = ViewBag.Response as Pagination<List<WorkOrderAssigned>>;

}
<form class="form" style="margin-bottom:0px;">
    <partial name="~/Views/WorkOrder/_filter.cshtml" model="Model" />
    <hr />
    @{ var param = Model.GetType()
 .GetProperties()
 .ToDictionary(prop => prop.Name, prop => prop.GetValue(Model) != null ? prop.GetValue(Model).ToString() : "");
    }
<div class="workordertitle">
    @if (Model.isGeneralSearch)
    {
        <span>Work Orders</span>
    }
    else if (ResponseModel != null && ResponseModel.Payload.All(x => x.IsActive))
    {
        <span>Active Work Orders</span>
    }
    else
    {
        <span> Completed Work Orders</span>
    }
   
    <div class="Filter_con float-right" style="padding-right:5px;">
        <div class="d-inline custom-control custom-switch">
            <input type="checkbox" asp-for="SortedByDate" onchange="SubmitFn();" data-toggle="toggle" data-size="xs" data-off="Sorted by Highest Priority" data-on="Sorted by New" data-onstyle="warning" data-offstyle="info" id="sortbydate">
        </div>

        <div class="d-inline dropup ml-1">
            <a class=" dropdown-toggle" id="navbarDropdownExportLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-file-export"></i></a>

            <div class="dropdown-menu">
                <a name="exportlink" asp-action="ExportWO" class="dropdown-item" title="Export" asp-all-route-data="@param" asp-route-type="1" download="Wolist">To CSV</a>
                <a name="exportlink" asp-action="ExportWO" class="dropdown-item" title="Export" asp-all-route-data="@param" asp-route-type="2" download="Wolist">To Excel</a>

            </div>
        </div>
        <div class="d-inline">
            <input asp-for="FilterActive" class="filter_check" title="Filter" style="color:white;padding:5px;">
            <i class="fa fa-filter"></i>
        </div>
    </div>

</div>
</form>
@if (ResponseModel != null && !Model.isGeneralSearch && ResponseModel.Payload.All(x => x.IsActive))
{
        <div class="d-inline-flex w-100 pt-1 pb-1" style="border-left: 3px solid #d3d3d3;border-right: 3px solid #d3d3d3;">
            <div class="justify-content-lg-start col-md-6">
                <strong>To Do List</strong>
            </div>
            <div class="justify-content-end col-md-6">
                <a class="btn btn-success fa-pull-right" value="CreateWorkOrder" asp-action="CreateWorkOrderView"><i class="fa fa-plus"></i>&nbsp;New WO</a>
            </div>

        </div>

}


@if (ResponseModel != null && ResponseModel.Payload != null && ResponseModel.Payload.Any())
{
    <table class="table table-striped wordorderdetail table_container table-responsive-lg">
        <thead>
            <tr>
                <th>
                    WO#
                </th>
                <th>
                    Description
                </th>
                <th>
                    Assigned To
                </th>
                <th>
                    Property
                </th>
                <th>
                    Due Date
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in ResponseModel.Payload)
            {
                <tr>
                    <td>
                        <span><strong class="@if (item.ParentId != null)
                        {<text>green</text>}
                        else
                        {<text>orange</text>}">@item.Id</strong></span>
                    </td>

                    <td><span class="value" style="min-width:100px;text-align:center">@item.Description</span></td>
                    <td><span class="text-success"><strong>@item.AssignedTo</strong></span></td>
                    <td>
                        <span class="text-dark">
                            @if (item.Property != null)
                            {@item.Property.PropertyName}
                        </span>
                    </td>
                    <td>@item.DueDate</td>
                    <td style="width:180px;">
                        <div class="form-inline">
                            @{

                                Dictionary<string, string> keyValuePairs = new Dictionary<string, string>();
                                keyValuePairs.Add("id", item.Id + "");
                                if (item.IsActive)
                                {
                                    <auth-link bclass="btn btn-sm btn-primary mr-1" feature=@MenuEnum.Edit_WO routedata=@keyValuePairs action="EditWOView" controller="WorkOrder" content='<i class="fa fa-pencil-alt"></i>&nbsp;Edit'></auth-link>
                                }
                                <auth-link bclass="btn btn-sm btn-info" feature=@MenuEnum.GetWO_Detail routedata=@keyValuePairs action="GetWODetail" controller="WorkOrder" content='<i class="fa fa-info"></i>&nbsp;Detail'></auth-link>
                            }
                        </div>
                    </td>
                </tr>
                                }
        </tbody>

    </table>
    <hr />
    <nav>
        <ul class="pagination">
            @{ int current = 0;}
            <li class="page-item @if (ResponseModel.CurrentPage == 0)
            {<text>disabled</text> }">
                @Html.ActionLink("Prev", "Index", "WorkOrder", "", "", "", new { requestedPage = current - 1, matchString = ViewBag.searchstring, status = ViewBag.status, enddate = ViewBag.enddate }, new { @class = "page-link" })
            </li>

            @for (int i = 0; i < ResponseModel.PageCount; i++)
            {

                if (ResponseModel.CurrentPage == i)
                {
                    <li class="page-item active">
                        <a class="page-link">@(i + 1) <span class="sr-only">(current)</span></a>
                    </li>
                    current = i;
                }
                else
                {
                    <li class="page-item">
                        @{ Model.PageNumber = i;}
                        @Html.ActionLink(i + 1 + "", "Index", "WorkOrder", "", "", "", Model, new { @class = "page-link" })
                    </li>
                                }
                            }
            @{ Model.PageNumber = current + 1;}
            <li class="page-item @if (ResponseModel.CurrentPage + 1 == ResponseModel.PageCount)
            {<text>disabled</text> }">
                @Html.ActionLink("Next", "Index", "WorkOrder", "", "", "", Model, new { @class = "page-link" })
            </li>
        </ul>
    </nav>
}
else
{
<span>No records found.</span>
}


@if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
{
    var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

    <script>
        alertify.alert('@key', '<p>@TempData[key]</p>', function () { });
    </script>
}

<script>

    $('#Export').change(function () {
        $('input[type="submit"]').click();
    })
    function SubmitFn() {
        $('#filter').click();
    }

</script>
<style>
    .dropup .dropdown-item {
        color: black;
    }
    .toggle.btn.btn-xs.btn-info.off {
        width: 220.125px !important;
        height: 20.8056px !important;
    }
    .toggle.btn.btn-xs.btn-warning{
    width: 220.125px !important;
    height: 20.8056px !important;
}
</style>

