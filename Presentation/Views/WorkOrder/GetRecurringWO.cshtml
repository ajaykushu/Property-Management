@model WOFilterModel
@{var ResponseModel = ViewBag.Response as Pagination<List<RecurringWOs>>; }
<form class="form">
    <div class="card wofilter" style="@if(!Model.FilterActive){<text>display:none;</text>}">
        <div class="card-body">
            <div class="card-title float-right"><a href="#" class="closefilter"><i class="fa fa-times"></i></a></div>
            <div class="form-row">
                <div class="col-xs-5">
                    <label asp-for="TermSearch">Search all fields</label>
                    <input asp-for="TermSearch" class="form-control form-control-sm custom-input">

                </div>
                <div class="col-xs-5">
                    <label asp-for="WOId">Search WO Number</label>
                    <input asp-for="WOId" class="form-control form-control-sm custom-input">

                </div>
                <div class="col-xs-5">
                    <label asp-for="AssignedTo">Search by Assigned To</label>
                    <input asp-for="AssignedTo" class="form-control form-control-sm custom-input">

                </div>
                <div class="col-xs-5">
                    <label asp-for="PropertyName">Search by Property</label>
                    <input asp-for="PropertyName" class="form-control form-control-sm custom-input">

                </div>
                <div class="col-xs-5">
                    <label asp-for="CreationStartDate"></label>
                    <input asp-for="CreationStartDate" type="date" class="form-control form-control-sm custom-input">
                </div>
                <div class="col-xs-5">
                    <label asp-for="CreationEndDate"></label>
                    <input asp-for="CreationEndDate" type="date" class="form-control form-control-sm custom-input">
                </div>
                <div class="col-xs-5">
                    <label asp-for="DueDate"></label>
                    <input asp-for="DueDate" type="date" class="form-control form-control-sm custom-input">
                </div>
                <div class="col-xs-5">
                    <label>Priority</label>
                    <select asp-for="Priority" type="date" class="form-control form-control-sm custom-input">
                        <option value="">Filter by Priority</option>
                        <option value="0">Critical</option>
                        <option value="1">High</option>
                        <option value="2">Medium</option>
                        <option value="3">Low</option>
                    </select>
                </div>
                <div class="col-xs-5">
                    <label>Status</label>
                    <select asp-for="Status" class="form-control top-buffer form-control-sm custom-input">
                        <option value="">Filter by Status</option>
                        <option value="ADCM">Add Comment Only</option>
                        <option value="BINE">Bid Needed</option>
                        <option value="BIRE">Bid Received</option>
                        <option value="BIRQ">Bid Requested</option>
                        <option value="COMP">Complete</option>
                        <option value="COBQ">Complete But Bad Quality</option>
                        <option value="CONI">Complete, Need Inspection</option>
                        <option value="DAIL">Daily</option>
                        <option value="FISC">Finalize Scope</option>
                        <option value="HOLD">Hold</option>
                        <option value="NEWO">New work order</option>
                        <option value="ORMA">Order Materials</option>
                        <option value="PEND">Pending</option>
                        <option value="REAS">Ready To Assign</option>
                        <option value="WOAS">Work Assigned</option>
                        <option value="WOPR">Work In Progress</option>
                        <option value="WOOR">Work Ordered</option>
                    </select>
                </div>
                <div class="col-xs-5">
                    <label>Search by Vendor</label>
                    <input asp-for="Vendor" class="form-control top-buffer form-control-sm custom-input">
                </div>
            </div>
            <div class="d-lg-inline-flex">
                <input type="submit" value="Filter" class="btn btn-sm btn-primary top-buffer">
                &nbsp;<input type="reset" value="Reset" class="btn btn-sm btn-danger top-buffer">
            </div>
        </div>
    </div>
    <hr />
    @{ var param = Model.GetType()
              .GetProperties()
              .ToDictionary(prop => prop.Name, prop => prop.GetValue(Model) != null ? prop.GetValue(Model).ToString() : "");
    }
    <div class="workordertitle">
        Recurring Work Orders
        <div class="Filter_con float-right">
            <input asp-for="FilterActive" class="filter_check" title="Filter" style="color:white;padding:5px;">
            <i class="fa fa-filter"></i>


            <div class="d-inline dropup ml-1">
                <a class=" dropdown-toggle" id="navbarDropdownExportLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-file-export"></i></a>
                <div class="dropdown-menu">

                    <a name="exportlink" asp-action="ExportRecurringWO" class="dropdown-item" title="Export" asp-all-route-data="@param" asp-route-type="1" download="Wolist">To CSV</a>
                    <a name="exportlink" asp-action="ExportRecurringWO" class="dropdown-item" title="Export" asp-all-route-data="@param" asp-route-type="2" download="Wolist">To Excel</a>

                </div>
            </div>
        </div>
    </div>




    <div class="d-inline-flex w-100 pt-1 pb-1" style="border-left: 3px solid #d3d3d3;border-right: 3px solid #d3d3d3;">

        <div class="justify-content-end col-md-12">
            <a class="btn btn-success fa-pull-right" value="CreateWorkOrder" asp-action="CreateWorkOrderRecurringView"><i class="fa fa-plus"></i>&nbsp;New Recurring WO</a>
        </div>

    </div>


    @if (ResponseModel != null && ResponseModel.Payload != null && ResponseModel.Payload.Any())
    {
        <table class="table table-striped wordorderdetail table_container table-responsive-lg">
            <thead>
                <tr>
                    <th>
                        WO#
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Assigned To
                    </th>
                    <th>
                        Property
                    </th>
                    <th>
                        Due Date
                    </th>
                    <th>
                        Scheduled At
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in ResponseModel.Payload)
                {
                    <tr>
                        <td>
                            <span><strong class="green">@item.Id</strong></span>
                        </td>

                        <td><span class="value" style="min-width:100px;text-align:center">@item.Description</span></td>
                        <td><span class="text-success"><strong>@item.AssignedTo</strong></span></td>
                        <td>
                            <span class="text-dark">
                                @if (item.Property != null)
                                {@item.Property.PropertyName}
                            </span>
                        </td>
                        <td>@item.DueAfterDays</td>
                        <td>@item.ScheduleAt</td>
                        <td style="width:180px;">
                            <div class="form-inline">
                                @{
                                    <a class="btn btn-sm btn-primary mr-1" asp-route-id="@item.Id" asp-action="EditRecurringWOView" asp-controller="WorkOrder">
                                        <i class="fa fa-pencil-alt"></i>&nbsp; Edit
                                    </a>
                                    <a class="btn btn-sm btn-info mr-1" asp-route-id="@item.Id" asp-route-type="2" asp-action="GetWODetail" asp-controller="WorkOrder">
                                        <i class="fa fa-pencil-alt"></i>&nbsp; Detail
                                    </a>


                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <hr />
        <nav>
            <ul class="pagination">
                @{ int current = 0;}
                <li class="page-item @if (ResponseModel.CurrentPage == 0)
                    {<text>disabled</text> }">
                    @Html.ActionLink("Prev", "Index", "WorkOrder", "", "", "", new { requestedPage = current - 1, matchString = ViewBag.searchstring, status = ViewBag.status, enddate = ViewBag.enddate }, new { @class = "page-link" })
                </li>

                @for (int i = 0; i < ResponseModel.PageCount; i++)
                {

                    if (ResponseModel.CurrentPage == i)
                    {
                        <li class="page-item active" >
                            <a class="page-link "  >@(i + 1) <span class="sr-only">(current)</span></a>
                        </li>
                        current = i;
                    }
                    else
                    {
                        <li class="page-item">
                            @{ Model.PageNumber = i;}
                            @Html.ActionLink(i + 1 + "", "Index", "WorkOrder", "", "", "", Model, new { @class = "page-link" })
                        </li>
                    }
                }
                @{ Model.PageNumber = current + 1;}
                <li class="page-item @if (ResponseModel.CurrentPage + 1 == ResponseModel.PageCount)
                    {<text>disabled</text> }">
                    @Html.ActionLink("Next", "Index", "WorkOrder", "", "", "", Model, new { @class = "page-link" })
                </li>
            </ul>
        </nav>
    }
    else
    {
        <span>No Record found</span>
    }
</form>
@if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
{
    var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

    <script>
        alertify.alert('@key', '<p>@TempData[key]</p>', function () { });
    </script>
}

<script>

    $('.filter_check').click(function () {
        if ($(this).prop("checked") == true) {
            $('.wofilter').show();
        }
    });

    $('.closefilter').click(function () {
        $('.filter_check').prop("checked", false);
        $('.wofilter').hide(100);
    });
    $('#Export').change(function () {
        $('input[type="submit"]').click();
    })
</script>
<style>
.dropup .dropdown-item {
    color: black;
}
</style>






























