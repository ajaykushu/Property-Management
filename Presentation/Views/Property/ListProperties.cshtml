@model IEnumerable<Properties>
@{
    ViewData["Title"] = "ListProperties";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Properties</h1>
@if (Model != null)
{
    <p>
        <auth-link bclass="btn btn-sm btn-success addmodal" feature=@MenuEnum.Add_Property data-toggle="modal" data-target=".bd-example-modal-lg" content='<i class="fa fa-plus fa-1x"></i>&nbsp;Create New'></auth-link>
        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                </div>
            </div>
        </div>
    </p>
    <div class="new_address_css">
        @if (Model == null || !Model.Any())
        {
            <div>No properties Found</div>
        }
        else
        {
            foreach (var item in Model)
            {
                <div class="card propetry">
                    <div class="card-header propery_head">
                        <ul class="opertion_menu">
                            @{
                                Dictionary<string, string> keyValuePairs = new Dictionary<string, string>();
                                keyValuePairs.Add("id", item.Id + "");
                            }
                            <li class="opertion_menu_item"><auth-link bclass="opertion_menu_item" feature=@MenuEnum.Delete_Property routedata=@keyValuePairs action="DeleteProperty" controller="Property" content='<i class="fa fa-trash-alt fa-1x" aria-hidden="true"></i>'></auth-link></li>
                            &nbsp;
                            <li class="opertion_menu_item"><auth-link bclass="opertion_menu_item" feature=@MenuEnum.Edit_Property routedata=@keyValuePairs action="PropertyEditView" controller="Property" content='<i class="fa fa-pencil-alt fa-1x" aria-hidden="true"></i>'></auth-link></li>
                            <li class="opertion_menu_item">
                               <a asp-action="PropertyConfig" asp-controller="Property" asp-route-id="@item.Id"><i class="fa fa-cog"></i></a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@item.PropertyName</h5>
                        <p class="card-text">
                            <address>
                                <strong>@item.PropertyType</strong><br>
                                @item.HouseNumber @item.Street<br>
                                @item.Locality, @item.City<br>
                                @item.PinCode @item.Country<br>
                                @item.StreetLine2<br>
                            </address>
                        </p>
                    </div>
                </div>
            }
        }
    </div>
}
<div class="spinner">
    <i class="fa fa-spinner fa-3x fa-spin" aria-hidden="true"></i>
</div>

<script>
    $('.addmodal').click(function () {
        var url = '@Url.Action("action")';
        url = url.replace("action", 'AddPropertyView');
        
                $('.modal-content').html("");
                $('.fa-spin').show();
                RESTCALL(url, {}, "GET", "", true, function (res) {
                    $('.modal-content').html(res);
                    $('.fa-spin').hide();
                })
    })
</script>
<style>
    .new_address_css {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-right: 10px;
        padding-left: 0px;
        padding-right: 5px;
    }

        .new_address_css .propetry {
            flex: 1 1 auto;
            border: 1px blue solid;
            text-align: center;
            margin-right: 10px;
        }
</style>
@if (TempData.ContainsKey("Error") || TempData.ContainsKey("Success"))
{
    var key = TempData.ContainsKey("Error") ? "Error" : TempData.ContainsKey("Success") ? "Success" : "Info";

    <script>
        alertify.alert('@key', '<p>@TempData[key]</p>', function () { });
    </script>
}